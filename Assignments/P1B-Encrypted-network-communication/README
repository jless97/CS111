Identification:
    NAME: Jason Less
    EMAIL: jaless1997@gmail.com
    ID: 404640158

Description of included files (Features):
(1) lab1b-server.c: This source file was the server program that created 
    the connection for the client program to connect to. This file 
    supports standard IPC communication with the client, but also has an 
    encryption option to encrypt/decrypt data sent between the client 
    (via socket) and the shell (via pipes).
(2) lab1b-client.c: This source file was the client program that connected 
    to the server program. The client side was able to read from the 
    keyboard and send the data to the screen and the server (via socket), 
    and also read data from the server and print it to the screen. This 
    file supported a log option (to write sent/received bytes) to a file, 
    as well as the encryption option.
(3) my.key: This is a small file that contains the key created for the 
    encryption portion.
(4) Makefile: The Makefile for this lab is very standard in that it only
    contains a default build target, as well as clean and dist target. The
    default target builds the two source files: lab1b-server.c and 
    lab1b-server.c. The dist target is used to create the tarball, while 
    the default option is used to build the program. Lastly, the clean 
    target is used to remove the files spawned with the make command.

Testing Methodology:
Unlike for Project 0, no smoke tests were used to test the program in the 
Makefile (as this wasn't required). However, I tested my program by using
incremental programming, and making sure that each requirement of the spec 
was functioning correctly as I continued to finish the project. In addition, 
I printed out code-specific error messages after each system call, so that I
knew exactly where the error was coming from.

Citations and Research:
- The TA discussion section/slides, Piazza responses, and man pages for the
  used APIs were especially useful for this project
  - A good deal of my concerns (and questions) were answered with fairly 
    good clarity from other students, and TA: Zhaoxing Bu
- Below are a list of other websites that I used for research on required 
  functions and syntax:
  http://www.cs.rpi.edu/~moorthy/Courses/os98/Pgms/socket.html
  - This socket tutorial (recommended by Professor) was instrumental in 
    helping me to understand sockets and set up my server/client files
  https://linux.die.net/man/3/mcrypt
  - This man page was the main guide that I used for the encryption portion 
    of the assignment, as it provided a good description of the APIs, and a 
    nice example
  http://web.cs.ucla.edu/classes/spring17/cs111/projects/fd_juggling.html
  - For a brief reminder on I/O Redirection
  https://beej.us/guide/bgnet/output/html/multipage/pollman.html
  - Used as another guide to learning about the poll I/O process, with an
    example
  http://www.asciitable.com/
  - Used to get the names and corresponding number representations of values
    such as carriage return, newline, end of text, and end of transmission
  http://www.comptechdoc.org/os/linux/programming/linux_pgsignals.html
  - Used to get the signal names and numbers of required Linux signals for
    this project
